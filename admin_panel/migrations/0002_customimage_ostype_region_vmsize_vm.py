# Generated by Django 4.2.2 on 2023-06-25 07:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("admin_panel", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="OSType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="VMSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="VM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vm_id", models.CharField(max_length=100)),
                ("configuration", models.CharField(max_length=100)),
                ("status", models.CharField(max_length=20)),
                ("assigned_time", models.DateTimeField()),
                ("launch_time", models.DateTimeField(null=True)),
                ("expiry_time", models.DateTimeField(null=True)),
                (
                    "vm_provider",
                    models.CharField(
                        choices=[
                            ("AWS", "Amazon Web Services"),
                            ("Azure", "Microsoft Azure"),
                            ("Manual", "Manually Added"),
                        ],
                        max_length=10,
                    ),
                ),
                ("vm_ip", models.CharField(blank=True, max_length=100)),
                ("vm_password", models.CharField(blank=True, max_length=100)),
                ("azure_nic", models.CharField(blank=True, max_length=100)),
                ("azure_vnet", models.CharField(blank=True, max_length=100)),
                ("aws_instance_id", models.CharField(blank=True, max_length=100)),
                ("aws_subnet_id", models.CharField(blank=True, max_length=100)),
                ("aws_security_group", models.CharField(blank=True, max_length=100)),
                ("is_active", models.BooleanField(default=False)),
                ("is_created", models.BooleanField(default=False)),
                (
                    "lunching_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("In Queue", "In Queue"),
                            ("Lunching", "Lunching"),
                            ("Getting Info", "Getting Info"),
                            ("Adding Final Touch", "Adding Final Touch"),
                            ("Almost Done", "Almost Done"),
                            ("Done", "Done"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_operation", models.BooleanField(default=False)),
                (
                    "operation_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Queued", "Queued"),
                            ("Performing Task", "Performing Task"),
                            ("Just There", "Just There"),
                            ("Done", "Done"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_guacamole", models.BooleanField(default=False)),
                ("guacamole_url", models.CharField(blank=True, max_length=200)),
                ("guacamole_username", models.CharField(blank=True, max_length=50)),
                ("guacamole_password", models.CharField(blank=True, max_length=50)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="admin_panel.customimage",
                    ),
                ),
                (
                    "os_image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="admin_panel.ostype",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="admin_panel.region",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admin_panel.student",
                    ),
                ),
                (
                    "vm_size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="admin_panel.vmsize",
                    ),
                ),
            ],
        ),
    ]
